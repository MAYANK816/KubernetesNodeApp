trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  containerRegistry: 'bajajnodeappregistry.azurecr.io'
  kubernetesNamespace: 'default'
  kubernetesServiceConnection: 'NodeJSCluster-default'

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'myazuredevopssubscription'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az acr login --name $(containerRegistry)
      az acr build --registry $(containerRegistry) --image myimage:$(Build.BuildId) .
      az acr tag --registry $(containerRegistry) --image myimage:$(Build.BuildId) $(containerRegistry)/myimage:latest
  displayName: 'Build and tag Docker image'

- task: Docker@2
  inputs:
    containerRegistry: '$(containerRegistry)'
    repository: 'myimage'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: |
      $(Build.BuildId)
      latest
  displayName: 'Push Docker image to Azure Container Registry'

- task: Kubernetes@1
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: '$(kubernetesServiceConnection)'
    namespace: '$(kubernetesNamespace)'
    command: 'apply'
    useConfigurationFile: true
    configuration: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: myapp
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: myapp
        template:
          metadata:
            labels:
              app: myapp
          spec:
            containers:
            - name: myapp
              image: $(containerRegistry)/myimage:latest
              ports:
              - containerPort: 8001
    arguments: '--force'
  displayName: 'Deploy to AKS'
